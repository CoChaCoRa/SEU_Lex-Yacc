typedef struct Node
{
    int value;
    Node *next;
};

void QuickSort(int *arr,int low,int high)
{
    int i=low,j=high;
    int temp=arr[low];
    while(i<j)
    {
        for(;i<j && arr[j]>=temp;j--);
        if(i<j)
        {
            arr[i]=arr[j];
            i++;
        }
        for(;i<j && arr[i]<=temp;i++);
        if(i<j)
        {
            arr[j]=arr[i];
            j--;
         }
    }
    arr[i]=temp;
    if(i-1>low)
    {
        QuickSort(arr,low,i-1);
    }
    if(j+1>high)
    {
        QuickSort(arr,j+1,high);
    }
}

int main(){
    int cnt = 10;
    int arr[3][3];
    enum week{Mon = 1,Tues = 2,Wed = 3,Thurs = 4,Fri = 5,Sat = 6,Sun = 7};
    Node n;
    Node *p;
    bool flag = false;
    int t[]={23,31,49,31,6,19};
    cnt += 5; 
    n.value = cnt*5+cnt;
    p = n->next;

    for(int i = 0;i< cnt;++i)
    {
        while(!flag)
        {
            if(n.value!=i && flag==false)
            {
                flag =true;
            }
            else
            {
                if(n.value==5)
                {
                    n.value += 1000;
                }
            }
        }
    }

    QuickSort(t,0,5);

    return 0;
}